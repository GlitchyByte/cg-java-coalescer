#!/bin/sh
# Copyright 2020-2021 GlitchyByte
# SPDX-License-Identifier: Apache-2.0

# Run app!

# Capture arguments.
args=$*

# Build distribution and gather properties.
# We do it in one pass for speed.
gradleProperties=$(./gradlew build properties)
if test $? -ne 0; then
  echo "Build failed!"
  exit 2
fi

# Get Gradle properties.
# We did this already for speed. Read above.
#gradleProperties=$(./gradlew properties)

# Get build directory.
buildDir=$(echo "$gradleProperties" | sed -n 's/^buildDir: \(.*\)/\1/p')
if test -z buildDir; then
  echo "Build directory not found!"
  exit 2
fi

# Get distribution directory.
distsDirName=$(echo "$gradleProperties" | sed -n 's/^distsDirName: \(.*\)/\1/p')
if test -z distsDirName; then
  echo "Distribution directory not found!"
  exit 2
fi
distDir="$buildDir/$distsDirName"

# Get application name.
appName=$(echo "$gradleProperties" | sed -n 's/^applicationName: \(.*\)/\1/p')
if test -z appName; then
  echo "Application name not found!"
  exit 2
fi

# Get version.
version=$(echo "$gradleProperties" | sed -n 's/^version: \(.*\)/\1/p')
if test -z version; then
  echo "Version not found!"
  exit 2
fi

# Get tar path.
tarPath="$distDir/$appName-$version.tar"
if test -z "$tarPath"; then
  echo "No distribution found!"
  exit 2
fi

# Get work dir.
workDir="${tarPath%.tar}"

# Remove work directory, if it exists.
if test -d "$workDir"; then
  rm -dr "$workDir"
  if test $? -ne 0; then
    echo "Can't remove '$workDir'!"
    exit 2
  fi
fi

# Extract distribution into work dir.
tar -xf "$tarPath" -C "$distDir"
if test $? -gt 0; then
  echo "Tar expansion failed!"
  exit 2
fi

# Run app.
"$workDir"/bin/"$appName" $args
